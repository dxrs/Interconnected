//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/Input Action/Input Main Menu.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputMainMenu: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputMainMenu()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Input Main Menu"",
    ""maps"": [
        {
            ""name"": ""Main Menu"",
            ""id"": ""2b86760c-d8c2-48b2-8dc0-fe7ad648f41f"",
            ""actions"": [
                {
                    ""name"": ""Navigation Up"",
                    ""type"": ""Button"",
                    ""id"": ""5a993a9a-1f62-461a-8a75-164ccde4fb3c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Navigation Down"",
                    ""type"": ""Button"",
                    ""id"": ""8971873d-d508-4bc7-8572-e7bf3c98849a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Navigation Confirm"",
                    ""type"": ""Button"",
                    ""id"": ""ba5d109f-00e5-4e10-bc0e-2e3256aae71e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e6938f49-691c-45be-beae-6cdaec94c0a8"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Main Menu scheme"",
                    ""action"": ""Navigation Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f2b4ad24-11ad-42e8-b285-438a9acd2e86"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Main Menu scheme"",
                    ""action"": ""Navigation Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f27196a-0319-4b97-ad6f-651544c4a360"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Main Menu scheme"",
                    ""action"": ""Navigation Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""901976d9-174a-4cc4-812c-79a5bfd83e4b"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Main Menu scheme"",
                    ""action"": ""Navigation Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""42d685cc-7412-4efb-9412-d1f8131e6eff"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Main Menu scheme"",
                    ""action"": ""Navigation Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cecd4e91-ebb6-4abb-b0a4-ecf67cd85ace"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Main Menu scheme"",
                    ""action"": ""Navigation Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eacfe3f6-2f44-4d95-b1cc-5de39dcbae22"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Main Menu scheme"",
                    ""action"": ""Navigation Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fbbea511-0554-4504-9323-f64fe003ed28"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Main Menu scheme"",
                    ""action"": ""Navigation Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Main Menu scheme"",
            ""bindingGroup"": ""Main Menu scheme"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": true,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Main Menu
        m_MainMenu = asset.FindActionMap("Main Menu", throwIfNotFound: true);
        m_MainMenu_NavigationUp = m_MainMenu.FindAction("Navigation Up", throwIfNotFound: true);
        m_MainMenu_NavigationDown = m_MainMenu.FindAction("Navigation Down", throwIfNotFound: true);
        m_MainMenu_NavigationConfirm = m_MainMenu.FindAction("Navigation Confirm", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Main Menu
    private readonly InputActionMap m_MainMenu;
    private List<IMainMenuActions> m_MainMenuActionsCallbackInterfaces = new List<IMainMenuActions>();
    private readonly InputAction m_MainMenu_NavigationUp;
    private readonly InputAction m_MainMenu_NavigationDown;
    private readonly InputAction m_MainMenu_NavigationConfirm;
    public struct MainMenuActions
    {
        private @InputMainMenu m_Wrapper;
        public MainMenuActions(@InputMainMenu wrapper) { m_Wrapper = wrapper; }
        public InputAction @NavigationUp => m_Wrapper.m_MainMenu_NavigationUp;
        public InputAction @NavigationDown => m_Wrapper.m_MainMenu_NavigationDown;
        public InputAction @NavigationConfirm => m_Wrapper.m_MainMenu_NavigationConfirm;
        public InputActionMap Get() { return m_Wrapper.m_MainMenu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainMenuActions set) { return set.Get(); }
        public void AddCallbacks(IMainMenuActions instance)
        {
            if (instance == null || m_Wrapper.m_MainMenuActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MainMenuActionsCallbackInterfaces.Add(instance);
            @NavigationUp.started += instance.OnNavigationUp;
            @NavigationUp.performed += instance.OnNavigationUp;
            @NavigationUp.canceled += instance.OnNavigationUp;
            @NavigationDown.started += instance.OnNavigationDown;
            @NavigationDown.performed += instance.OnNavigationDown;
            @NavigationDown.canceled += instance.OnNavigationDown;
            @NavigationConfirm.started += instance.OnNavigationConfirm;
            @NavigationConfirm.performed += instance.OnNavigationConfirm;
            @NavigationConfirm.canceled += instance.OnNavigationConfirm;
        }

        private void UnregisterCallbacks(IMainMenuActions instance)
        {
            @NavigationUp.started -= instance.OnNavigationUp;
            @NavigationUp.performed -= instance.OnNavigationUp;
            @NavigationUp.canceled -= instance.OnNavigationUp;
            @NavigationDown.started -= instance.OnNavigationDown;
            @NavigationDown.performed -= instance.OnNavigationDown;
            @NavigationDown.canceled -= instance.OnNavigationDown;
            @NavigationConfirm.started -= instance.OnNavigationConfirm;
            @NavigationConfirm.performed -= instance.OnNavigationConfirm;
            @NavigationConfirm.canceled -= instance.OnNavigationConfirm;
        }

        public void RemoveCallbacks(IMainMenuActions instance)
        {
            if (m_Wrapper.m_MainMenuActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMainMenuActions instance)
        {
            foreach (var item in m_Wrapper.m_MainMenuActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MainMenuActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MainMenuActions @MainMenu => new MainMenuActions(this);
    private int m_MainMenuschemeSchemeIndex = -1;
    public InputControlScheme MainMenuschemeScheme
    {
        get
        {
            if (m_MainMenuschemeSchemeIndex == -1) m_MainMenuschemeSchemeIndex = asset.FindControlSchemeIndex("Main Menu scheme");
            return asset.controlSchemes[m_MainMenuschemeSchemeIndex];
        }
    }
    public interface IMainMenuActions
    {
        void OnNavigationUp(InputAction.CallbackContext context);
        void OnNavigationDown(InputAction.CallbackContext context);
        void OnNavigationConfirm(InputAction.CallbackContext context);
    }
}
